#+TITLE:     Org-Mode Beamer Example
#+AUTHOR:    Derek Feichtinger
#+EMAIL:     derek.feichtinger@psi.ch

#+DESCRIPTION: 
#+KEYWORDS: 
#+LANGUAGE:  en
#+OPTIONS:   num:t toc:t ::t |:t ^:{} -:t f:t *:t <:t
#+OPTIONS:   tex:t d:nil todo:t pri:nil tags:nil
#+OPTIONS:   timestamp:t

# started this on 2010-03-30 Tue

# this allows defining headlines to be exported/not be exported
#+SELECT_TAGS: export
#+EXCLUDE_TAGS: noexport

# By default I do not want that source code blocks are evaluated on export. Usually
# I want to evaluate them interactively and retain the original results.
#+PROPERTY: header-args :eval never-export

* Beamer configuration                                             :noexport:
** Basic
# this triggers loading the beamer menu (C-c C-b) when the file is read
#+startup: beamer

#+LaTeX_CLASS: beamer

#    LATEX CLASS OPTIONS
# [bigger]
# [presentation]
# [handout] : print handouts, i.e. slides with overlays will be printed with
#   all overlays turned on (no animations).
# [notes=show] : show notes in the generated output (note pages follow the real page)
# [notes=only] : only render the notes pages
# [t] / [c] : Place text of slides at the (vertical) top/center of the slides
# [10pt] : font size
#+LaTeX_CLASS_OPTIONS: [t,10pt,xcolor={dvipsnames}]


#+COLUMNS: %20ITEM %13BEAMER_env(Env) %6BEAMER_envargs(Args) %4BEAMER_col(Col) %7BEAMER_extra(Extra)

# export second level headings as beamer frames. All headlines below
# the org-beamer-frame-level (i.e. below H value in OPTIONS), are
# exported as blocks
#+OPTIONS: H:2

** Beamer Theme Definition
#+BEAMER_THEME: Madrid
# #+BEAMER_THEME: Hydrogen

# Note: custom style files can be placed centrally in the user specific directory
# ~/texmf/tex. This will be searched recursively, so substructures are possible.
# q.v. http://tex.stackexchange.com/questions/1137/where-do-i-place-my-own-sty-or-cls-files-to-make-them-available-to-all-my-te

# One could also fine tune a number of theme settings instead of specifying the full theme
# #+BEAMER_COLOR_THEME: default
# #+BEAMER_FONT_THEME:
# #+BEAMER_INNER_THEME:
#+BEAMER_OUTER_THEME: miniframes [subsection=false]
# #+LATEX_CLASS: beamer

** changes to BeginSection for TOC and navigation
#+BEAMER_HEADER: \AtBeginSection[]{

# This line inserts a table of contents with the current section highlighted at
# the beginning of each section
#+BEAMER_HEADER: \begin{frame}<beamer>\frametitle{Topic}\tableofcontents[currentsection]\end{frame}

# In order to have the miniframes/smoothbars navigation bullets even though we do not use subsections 
# q.v. https://tex.stackexchange.com/questions/2072/beamer-navigation-circles-without-subsections/2078#2078
#+BEAMER_HEADER: \subsection{}
#+BEAMER_HEADER: }

** misc configuration
# I want to define a style for hyperlinks
#+BEAMER_HEADER: \hypersetup{colorlinks=true, linkcolor=blue}

# this can be used to define the transparency of the covered layers
#+BEAMER: \setbeamercovered{transparent=30}

# uncomment for defining *bold* as normal bold text instead of beamer alert
#  #+LATEX_HEADER_EXTRA: \setbeamerfont{alerted text}{series=\bfseries}
#  #+LATEX_HEADER_EXTRA: \setbeamercolor{alerted text}{fg=\black}

** Some remarks on options
   - [[info:org#Export%20settings][info:org#Export settings]]
   - The H:2 setting in the options line is important for setting the
     Beamer frame level. Headlines will become frames when their level
     is equal to =org-beamer-frame-level=.
   - ^:{} interpret abc_{subs} as subscript, but not abc_subs
   - num:t configures whether to use section numbers. If set to a number
     only headlines of this level or above will be numbered
   - ::t defines that lines starting with ":" will use fixed width font
   - |:t include tables in export
   - -:t Non-nil means interpret "\-", "--" and "---" for export.
   - f:t include footnotes
   - *:t Non-nil means interpret
     : *word*, /word/, _word_ and +word+.
   - <:t toggle inclusion of timestamps
   - timestamp:t include a document creation timestamp into the exported file
   - todo:t include exporting of todo keywords
   - d:nil do not export org heading drawers
   - tags:nil do not export headline tags

** addtional LaTeX packages

   # for generating example texts for testing
   #+BEAMER_HEADER: \usepackage{blindtext}

   # TODO: this clashes with the previous usepackage definition of
   # xcolor which gets loaded by pgfcore.sty, defined in beamer.cls
   # (traced through the logfiles' entries)
   
   # #+BEAMER_HEADER: \usepackage[pdftex,dvipsnames]{xcolor}

* Introduction
** An alternative title page for a section
   # usually I leave the heading empty (just spaces)
   # this is the only good way of making section title slides
   # I have found up to now.

   #+BEGIN_EXPORT beamer
   \vspace{0.3\textheight}
   \begin{center}
     \begin{minipage}[h]{.75\textwidth}
       \centering
       {\Huge Introduction}
     \end{minipage}
   \end{center}
   #+END_EXPORT
** Instructions
   Look at the *Org source* file to learn about available options. I also
   added many comments explaining the usage, there.
   - generating presentation notes.
   - inserting a table of contents with the current section highlighted at
     the beginning of each section.
   - configuring transparency of yet uncovered overlay elements.
** Debugging

   Look at the pdflatex messages in the buffer named =*Org PDF LaTeX
   Output*=
   
   You may want to run the TeX compilation interactively with something
   like
   : pdflatex -shell-escape beamer-example.tex
   to get the interactive LaTeX shell help

** Org mode version information

   #+LATEX: \small
  #+BEGIN_SRC emacs-lisp :results output :exports results :eval yes
    (princ (concat (format "Emacs version:\n%s\n" (emacs-version))
                   (format "\norg version: %s\n" (org-version))))
    
  #+END_SRC

  #+RESULTS:
  : Emacs version:
  : GNU Emacs 24.5.1 (x86_64-unknown-linux-gnu, GTK+ Version 3.10.8)
  :  of 2015-05-04 on dflt1w
  : 
  : org version: 8.2.10


** Sources and Links
- I started this example based on [[http://orgmode.org/worg/exporters/beamer/tutorial.html][the Worg hosted example by Eric S. Fraga]]
- Basic LaTeX Beamer links
  - [[http://www2.informatik.hu-berlin.de/~mischulz/beamer.html][An introduction to Beamer (German)]]
  - great [[https://github.com/fniessen/refcard-org-beamer][beamer reference card]] by Fabrice Niessen on GitHub.
  - nice link for choosing a theme: [[http://www.hartwork.org/beamer-theme-matrix/][beamer theme matrix]]
  - [[http://www.mathematik.uni-leipzig.de/~hellmund/LaTeX/beamer2.pdf][nice example of beamer features (pure Latex)]]
  - [[http://www.math.utah.edu/~smith/AmberSmith_GSAC_Beamer.pdf][Presentations using Latex - the Beamer Class]] by Amber Smith. Excellent
    introduction showing many beamer features.

*** Note							     :B_note:
    :PROPERTIES:
    :BEAMER_env: note
    :END:
    - an example of a note
** A simple slide
This slide consists of some text with a number of bullet points:
- the first, very *important*, point!
- the previous point shows the use of the special markup which
  translates to the Beamer specific /alert/ command for highlighting
  text.
The above list could be numbered or any other type of list and may
include sub-lists.

** A more complex slide
This slide illustrates the use of Beamer blocks.  The following text,
with its own headline, is displayed in a block:
*** Org mode increases productivity				  :B_theorem:
    :PROPERTIES:
    :BEAMER_env: theorem
    :END:
    - org mode means not having to remember \LaTeX commands.
    - it is based on ascii text which is inherently portable.
    - Emacs!

    \hfill \(\qed\)

** Tables
   The size of the table font can be chosen by giving a =#+LATEX: \small=
   command (or =\tiny= or =\footnotesize=)

   #+LATEX: \footnotesize
    #+NAME: tblWNs2014
    | WNs | Processors         | Cores/node | HS06/node | total cores | total HS06 |
    |-----+--------------------+------------+-----------+-------------+------------|
    |  20 | 2*Xeon X5560       |          8 |       118 |         160 |       2360 |
    |  11 | 2*E5-2670 2.60GHz  |         16 |       263 |         176 |       2893 |
    |   4 | 2*AMD 6272 2.40GHz |         32 |       241 |         128 |        964 |
    |-----+--------------------+------------+-----------+-------------+------------|
    |  35 |                    |            |           |         464 |       6217 |
#+TBLFM: @I$6..@II$6=$1*$4::@I$5..@II$5=$1*$3::@>$1=vsum(@I..@II)::@>$5..@>$6=vsum(@I..@II)

** This is a notes page						     :B_note:
   :PROPERTIES:
   :BEAMER_env: note
   :END:

   This is a notes page with some information.
   
** Exporting beamer presentations
   Frequently there is a need to convert a beamer presentation
   to MS powerpoint for sharing or contributing slides

***   The best solution known to me as of 2022 is
    1. open the PDF using =libreoffice --impress=
    2. Save as pptx
       - may need to adapt slides or copy content to another
         template


* A collection of example pages
** block environments
   
*** a block							    :B_block:
    :PROPERTIES:
    :BEAMER_env: block
    :END:
    #+BEGIN_EXAMPLE
    \begin{block}{A block}
    ...
    \end{block}
    #+END_EXAMPLE

*** an alert block					       :B_alertblock:
    :PROPERTIES:
    :BEAMER_env: alertblock
    :END:
    #+BEGIN_EXAMPLE
    \begin{alertblock}{An alert block}
    ...
    \end{alertblock}
    #+END_EXAMPLE

*** an example block					     :B_exampleblock:
    :PROPERTIES:
    :BEAMER_env: exampleblock
    :END:
    #+BEGIN_EXAMPLE
    \begin{exampleblock}{An alert block}
    ...
    \end{exampleblock}
    #+END_EXAMPLE

** colorbox
#+LaTeX: \setbeamercolor{myblockcolor}{bg=magenta,fg=white}
*** a block containing a colorbox                                   :B_block:
    :PROPERTIES:
    :BEAMER_env: block
    :END:

    # it seems I have do explicitely define the color settings for the
    # specific colorbox. I need to use the heading name of my colorbox in the following
    # inline LaTex setting:
    #+LATEX:  \setbeamercolor{colboxA}{fg=yellow,bg=white!10!blue}
**** colboxA                                               :B_beamercolorbox:
     :PROPERTIES:
     :BEAMER_env: beamercolorbox
     :BEAMER_opt: shadow=true,rounded=true,wd=0.9\textwidth,sep=1em
     :END:
     The beamercolorbox text and an Org example block
     #+BEGIN_EXAMPLE
     \begin{beamercolorbox}[shadow=true, rounded=true]{eecks}
     ...
     \end{beamercolorbox}
     #+END_EXAMPLE

*** a color box test made with inline LaTex code

    #+BEGIN_EXPORT latex
  \setbeamercolor{coloredboxstuff}{fg=yellow,bg=white!10!blue}
  \begin{beamercolorbox}[wd=0.9\textwidth,sep=1em]{coloredboxstuff}
    Just some text.
    \end{beamercolorbox}
    #+END_EXPORT

** fullframe							:B_fullframe:
   :PROPERTIES:
   :BEAMER_env: fullframe
   :END:

   A =fullframe= is a =frame= with an ignored slide
   title. =frametitle= is set to the empty string

** ignoreheading					    :B_ignoreheading:
   :PROPERTIES:
   :BEAMER_env: ignoreheading
   :END:

   - A headline with an =ignoreheading= environment will only have its contents
     displayed in the output. The heading text itself is ignored, and no
     heading bar is shown.
     + Contents are not inserted in any =frame= environment. It makes no sense
       to use this as major element for a slide.

   - ignoreheading is useful as a structural element in order to again
     place normal text after a previous element (like a block or a
     column environment).

** =structureenv= environment
*** structureenv 					     :B_structureenv:
    :PROPERTIES:
    :BEAMER_env: structureenv
    :END:
    - For highlighting text.
    - To help the audience see the structure of your presentation.
    - On this slide you should see that the text of the upper items is
      differently typeset from the bottom item in the /structureenv/.

*** end of structureenv					    :B_ignoreheading:
    :PROPERTIES:
    :BEAMER_env: ignoreheading
    :END:
    - you need to use =ignoreheading= (like here) in order to then
      insert some more normal text after the structureenv.

** =definition= environment

   
*** definition						       :B_definition:
    :PROPERTIES:
    :BEAMER_env: definition
    :END:
    Contents of the definition

** =proof= environment and revealing line by line
*** proof							    :B_proof:
    :PROPERTIES:
    :BEAMER_env: proof
    :END:
    - <1-| alert@1> Suppose /p/ were the largest prime number.
    - <2-> Let /q/ be the product of the first /p/ numbers.
    - <3-> Then /q + 1/ is not divisible by any of them.
    - <4-> But /q + 1/ is greater than /1/, thus divisible by some prime number
      not in the first /p/ numbers.\qedhere

** numbered list over two pages (1)
   1. one
   2. two
   3. three
   4. four
** numbered list over two pages (2)
   Use the =[@N]= syntax to start a numbered list at a certain value.

*** block A							    :B_block:
    :PROPERTIES:
    :BEAMER_env: block
    :END:
    5. [@5] five
    6. six
    7. seven
*** block B							    :B_block:
    :PROPERTIES:
    :BEAMER_env: block
    :END:
    8. [@8] eight
    9. nine
    10. ten

** long source code over two pages
   :PROPERTIES:
   :BEAMER_opt: allowframebreaks,label=
   :END:

   Use the =allowframebreaks= Beamer option.
   #+LATEX: \scriptsize
   #+BEGIN_SRC emacs-lisp
     (use-package python
       :config (progn
                 ;; load my own python helper functions
                 (load-file (concat dfeich/site-lisp "/my-pydoc-helper.el"))

                 (defun dfeich/python-keydefs ()
                   (define-key python-mode-map (kbd "<M-right>")
                     'python-indent-shift-right)
                   (define-key python-mode-map (kbd "<M-left>")
                     'python-indent-shift-left))
                 (add-hook 'python-mode-hook #'dfeich/python-keydefs)

                 ;; show line numbers on the left for python
                 (add-hook 'python-mode-hook 'linum-mode)

                 (when (featurep 'flycheck)
                   (add-hook 'python-mode-hook 'flycheck-mode))
            
                 (use-package jedi-core
                   :ensure t
                   :config (progn
                             (autoload 'jedi:setup "jedi-core" nil t)
                             (add-hook 'python-mode-hook 'jedi:setup)
                             (setq jedi:complete-on-dot t)
                             (setq jedi:server-args '("--log" "/tmp/jedi.log"
                                                      "--log-level" "INFO"))
                             (when (featurep 'company)
                               (defun dfeich/python-mode-hook ()
                                 (add-to-list 'company-backends 'company-jedi)
                                 )
                               (add-hook 'python-mode-hook 'dfeich/python-mode-hook))))))
   #+END_SRC

** placing text at the bottom of a page
   This text is on top
   
   #+LATEX: \vskip0pt plus 1filll
   This text is on the bottom
** reducing font size in bullet lists
   #+LATEX: \footnotesize \let\small\footnotesize

   This is a workaround to have the bullet list hierarchy not suddenly
   produce bigger font for the lower hierarchy, if you only reset the
   main font.
   
   #+begin_example
   #+LATEX: \footnotesize \let\small\footnotesize
   #+end_example

   - example
     - example
       - example
     - example
   - example 

** Text colors
   Examples for colored text (using the xcolor package):
   #+LATEX: \textcolor{green}{Text1}
   #+LATEX: \textcolor{red!25!green}{Text2}
   #+LATEX: \textcolor{red!50!green}{Text3}
   #+LATEX: \textcolor{red!75!green}{Text4}
   #+LATEX: \textcolor{red}{Text5}


   TODO: The Beamer class loads the =xcolor= package by default. By including
   the xcolor option =dvipsnames= in the beamer class definition, we should
   also be able to use those names:

   : #+LaTeX_CLASS_OPTIONS: [t,10pt,xcolor={dvipsnames}]

   But this does not seem to work.
   #+LATEX: \textcolor{Cyan}{Cyan}
   #+LATEX: \textcolor{Emerald}{Emerald}
   
* Animations by overlays
** Highlighting text

   The double =@@= can be used to enclose active code. Here we use it to specify
   beamer code that will highlight text by specifying an overlay.
   
   A *@@beamer:<2->@@useful* feature   
   
** Lists
   For the first list we use an =#+ATTR_BEAMER: :overlay +-= specification.

   It acts like =\begin{itemize}[<+->]=. So, it will cause the
   list items to appear one after the other.

   #+ATTR_BEAMER: :overlay +-
   - item 1
   - item 2
   - item 3

   For the second list we classify each line by angular brackets to
   explicitely define the order of revealing each item.
   - <1-> item 1
   - <3-> item 2
   - <2-> item 3

** Basic revealing of blocks using BEAMER_act
*** First Block 						    :B_block:
   :PROPERTIES:
   :BEAMER_env: block
   :END:
   - this is visible from the beginning
*** Second Block 					       :B_alertblock:
   :PROPERTIES:
   :BEAMER_env: alertblock
   :BEAMER_act: <2->
   :END:      
   - and this one is revealed afterwards by using the BEAMER_act
     keyword in the PROPERTIES section.
     
** revealing a picture
   A picture will be uncovered next
   
   #+LATEX: \visible<2->{
   #+ATTR_ORG: :width 800
   #+ATTR_LATEX: :height 0.6\textheight
   [[file:fig/simplegraph1.png]]
   #+LATEX: }
   
** Explicitely defining the transparancy of covered text
#+LATEX: \setbeamercovered{invisible}
*** First Block 						    :B_block:
   :PROPERTIES:
   :BEAMER_env: block
   :END:
   - this is visible from the beginning
*** Second Block 					       :B_alertblock:
   :PROPERTIES:
   :BEAMER_env: alertblock
   :BEAMER_act: <2->
   :END:      
   - this is initially invisible since we used
     =\setbeamercovered{invisible}= for this frame
   - then it is revealed again using the BEAMER_act
     keyword in the PROPERTIES section.
     
** different transparency setting and default overlay 
   :PROPERTIES:
   :BEAMER_act: [<+->]
   :END:      

   #+LATEX: \setbeamercovered{transparent=30}

*** First Block 						    :B_block:
   :PROPERTIES:
   :BEAMER_env: block
   :END:
   this is visible from the beginning. Note that we specified another
   transparency compared to the previous slide.
*** Second Block 					       :B_alertblock:
   :PROPERTIES:
   :BEAMER_env: alertblock
   :END:      
   Initial visibility defined by =\setbeamercovered{transparent=30}=.
     
*** Third Block 					       :B_alertblock:
   :PROPERTIES:
   :BEAMER_env: alertblock
   :END:      
   And a third block
     
** dynamic transparency setting and default overlay 
   :PROPERTIES:
   :BEAMER_act: [<+->]
   :END:      

   #+BEAMER: \setbeamercovered{highly dynamic}

*** First Block 						    :B_block:
   :PROPERTIES:
   :BEAMER_env: block
   :END:
   this is visible from the beginning. We defined =\setbeamercovered{highly dynamic}=
   so that other blocks are slowly getting less transparent.
*** Second Block 					       :B_alertblock:
   :PROPERTIES:
   :BEAMER_env: alertblock
   :END:      
   a second block
     
*** Third Block 					       :B_alertblock:
   :PROPERTIES:
   :BEAMER_env: alertblock
   :END:      
   And a third block
     
*** Fourth Block                                               :B_alertblock:
   :PROPERTIES:
   :BEAMER_env: alertblock
   :END:      
   And a fourth block

** plain text between two blocks
*** block 1							    :B_block:
    :PROPERTIES:
    :BEAMER_env: block
    :END:
    The first block
*** ign							    :B_ignoreheading:
    :PROPERTIES:
    :BEAMER_env: ignoreheading
    :END:
    #+LATEX: \onslide<2-> A plain text paragraph. I only managed to get the right uncovering
    behavior by using =#+LATEX: \onslide<2->= in front of the paragraph.
*** block 2							    :B_block:
    :PROPERTIES:
    :BEAMER_env: block
    :BEAMER_act: <3->
    :END:      
    The second block
    

* Multiple Columns
** Blocks in two columns

*** A left block					      :B_block:BMCOL:
    :PROPERTIES:
    :BEAMER_col: 0.45
    :BEAMER_env: block
    :END:
    - this slide consists of two columns
    - This is the first column

*** A right block					      :B_block:BMCOL:
    :PROPERTIES:
    :BEAMER_col: 0.45
    :BEAMER_env: block
    :END:
    - this is the right column
      
** A text section and a figure

*** A text section 						      :BMCOL:
    :PROPERTIES:
    :BEAMER_col: 0.4
    :END:
    - this slide consists of two columns
    - the first (left) column has no heading and consists of text
    - the second (right) column has an image and is enclosed in an
      *example* block

*** A screenshot 					    :BMCOL:B_example:
    :PROPERTIES:
    :BEAMER_col: 0.6
    :BEAMER_env: example
    :END:
    #+ATTR_LaTeX: :width 1.0\textwidth :float t :placement [H]
    [[file:fig/simplegraph1.png]]


** A centered text section and a figure

*** A centered text section 					      :BMCOL:
    :PROPERTIES:
    :BEAMER_col: 0.4
    :END:
# #+LATEX: \vbox to .2\textheight{%
# #+LATEX: \vfill
#+LATEX: \vspace{0.2\textheight}
    - a centered text section. I found no good way for
      using =\vfill= or =\minipage= as referenced [[http://tex.stackexchange.com/questions/15244/why-does-vfill-not-work-inside-a-beamer-column][here]]

# #+LATEX: \vfill
# #+LATEX: }%

*** A screenshot					    :B_example:BMCOL:
    :PROPERTIES:
    :BEAMER_col: 0.6
    :BEAMER_env: example
    :END:
    #+ATTR_LaTeX: :width 1.0\textwidth :float t :placement [H]
    [[file:fig/simplegraph1.png]]


** Babel
   :PROPERTIES:
   :BEAMER_envargs: [t]
   :END:
*** Octave code						      :BMCOL:B_block:
    :PROPERTIES:
    :BEAMER_col: 0.45
    :BEAMER_env: block
    :END:
#+name: octaveexample
#+begin_src octave :results output :exports both
A = [1 2 ; 3 4]
b = [1; 1];
x = A\b
#+end_src

*** The output						      :BMCOL:B_block:
    :PROPERTIES:
    :BEAMER_col: 0.4
    :BEAMER_env: block
    :BEAMER_envargs: <2->
    :END:

#+results: octaveexample
#+begin_example
A =

   1   2
   3   4

x =

  -1
   1

#+end_example

* Conclusions

** Summary
   - org is an incredible tool for time management
     - it is also excellent for composing documents
   - Beamer is a very powerful \LaTeX{} package for presentations
   - the combination is unbeatable: Org Beamer
     - ease of composing slides fast and being able to use all the other Org features
     - though, it takes a bit of a learning curve and examples to copy from


* Appendix							 :B_appendix:
  :PROPERTIES:
  :BEAMER_env: appendix
  :END:
** Appendix
   :PROPERTIES:
   :END:

   SOME BACKUP SLIDES. The Appendix will not be listed in the table of contents.

** Backup slide 1
   Some backup info
** Backup slide 2
   These details are not part of the main talk.

* COMMENT TODO
  - show how to embed SVG pictures
    
* COMMENT org babel settings
Local variables:
org-confirm-babel-evaluate: nil
org-latex-remove-logfiles: nil
End:
